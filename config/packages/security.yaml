security:
    encoders:
        Symfony\Component\Security\Core\User\User:
            algorithm: auto
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        in_memory:
            memory:
                users:
                    nicolas: { password: '$argon2id$v=19$m=65536,t=4,p=1$SERRbkJVQ2hUSjZIM2dZNA$Yzpx90qTk0lghEm0PAWUtdR1PeNJp6QpNTfBHbPeigA', roles: [ 'ROLE_ADMIN' ] }
                    carole: { password: '$argon2id$v=19$m=65536,t=4,p=1$Z2Q5bGRYd0N6bTM2N2s5OQ$F/iButqfSTStShBLr44PdiS+zLu/+llvDRA++ARdowk', roles: [ 'ROLE_USER' ] }
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy

#            http_basic:
#                realm: Zone sécurisée
            form_login:
                login_path: login
                check_path: login
            logout: true

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/product/create$, roles: ROLE_ADMIN }
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: ROLE_USER }
